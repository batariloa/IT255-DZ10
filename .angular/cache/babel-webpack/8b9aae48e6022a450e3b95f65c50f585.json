{"ast":null,"code":"var _asyncToGenerator = require(\"/home/dre/Documents/IT255-DZ10/IT255-DZ10/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nconst request = require('request-promise-native');\n\nconst apiFetch = function (input) {\n  return request.post({\n    headers: {\n      'content-type': 'application/json'\n    },\n    url: 'https://worldofwarcraft.com/graphql',\n    body: {\n      operationName: 'GetInitialRealmStatusData',\n      variables: {\n        input\n      },\n      extensions: {\n        persistedQuery: {\n          version: 1,\n          sha256Hash: '9c7cc66367037fda3007b7f592201c2610edb2c9a9292975cd131a37bbe61930'\n        }\n      }\n    },\n    json: true\n  });\n};\n\nconst makeRegionGameVersionSlug = function (region, version = 'retail') {\n  if (version === 'classic') {\n    return `classic-${region}`;\n  }\n\n  if (version === 'bc') {\n    return `bcc-${region}`;\n  }\n\n  return region;\n};\n\nconst fetchRealms = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(function* (region, version = 'retail') {\n    const compoundRegionGameVersionSlug = makeRegionGameVersionSlug(region, version);\n    const {\n      data\n    } = yield apiFetch({\n      compoundRegionGameVersionSlug\n    });\n    const realmsRaw = data.Realms;\n    return realmsRaw.map(realm => {\n      let population;\n\n      if (!realm.population) {\n        population = '-';\n      } else if (realm.population.slug === 'recomended') {\n        population = 'very-low';\n      } else {\n        population = realm.population.slug;\n      }\n\n      return {\n        name: realm.name,\n        slug: realm.slug,\n        locale: realm.locale,\n        timezone: realm.timezone,\n        online: realm.online,\n        type: realm.type.slug,\n        population\n      };\n    });\n  });\n\n  return function fetchRealms(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nconst fetchRealm = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator(function* (region, realm, version = 'retail') {\n    const realms = yield fetchRealms(region, version);\n    return realms.find(r => {\n      return [r.name.toLowerCase(), r.slug.toLowerCase()].includes(realm.toLowerCase());\n    });\n  });\n\n  return function fetchRealm(_x2, _x3) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nmodule.exports = {\n  fetchRealms,\n  fetchRealm\n};","map":{"version":3,"sources":["/home/dre/Documents/IT255-DZ10/IT255-DZ10/node_modules/wow-realm-status/index.js"],"names":["request","require","apiFetch","input","post","headers","url","body","operationName","variables","extensions","persistedQuery","version","sha256Hash","json","makeRegionGameVersionSlug","region","fetchRealms","compoundRegionGameVersionSlug","data","realmsRaw","Realms","map","realm","population","slug","name","locale","timezone","online","type","fetchRealm","realms","find","r","toLowerCase","includes","module","exports"],"mappings":"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","sourcesContent":["const request = require('request-promise-native');\n\nconst apiFetch = function (input) {\n\treturn request.post({\n\t\theaders: {\n\t\t\t'content-type': 'application/json'\n\t\t},\n\t\turl: 'https://worldofwarcraft.com/graphql',\n\t\tbody: {\n\t\t\toperationName: 'GetInitialRealmStatusData',\n\t\t\tvariables: {\n\t\t\t\tinput\n\t\t\t},\n\t\t\textensions: {\n\t\t\t\tpersistedQuery: {\n\t\t\t\t\tversion: 1,\n\t\t\t\t\tsha256Hash: '9c7cc66367037fda3007b7f592201c2610edb2c9a9292975cd131a37bbe61930'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tjson: true\n\t});\n};\n\nconst makeRegionGameVersionSlug = function (region, version = 'retail') {\n\tif (version === 'classic') {\n\t\treturn `classic-${region}`;\n\t}\n\n\tif (version === 'bc') {\n\t\treturn `bcc-${region}`;\n\t}\n\n\treturn region;\n};\n\nconst fetchRealms = async function (region, version = 'retail') {\n\tconst compoundRegionGameVersionSlug = makeRegionGameVersionSlug(region, version);\n\tconst {data} = await apiFetch({compoundRegionGameVersionSlug});\n\tconst realmsRaw = data.Realms;\n\n\treturn realmsRaw.map(realm => {\n\t\tlet population;\n\n\t\tif (!realm.population) {\n\t\t\tpopulation = '-';\n\t\t} else if (realm.population.slug === 'recomended') {\n\t\t\tpopulation = 'very-low';\n\t\t} else {\n\t\t\tpopulation = realm.population.slug;\n\t\t}\n\n\t\treturn {\n\t\t\tname: realm.name,\n\t\t\tslug: realm.slug,\n\t\t\tlocale: realm.locale,\n\t\t\ttimezone: realm.timezone,\n\t\t\tonline: realm.online,\n\t\t\ttype: realm.type.slug,\n\t\t\tpopulation\n\t\t};\n\t});\n};\n\nconst fetchRealm = async function (region, realm, version = 'retail') {\n\tconst realms = await fetchRealms(region, version);\n\n\treturn realms.find(r => {\n\t\treturn [r.name.toLowerCase(), r.slug.toLowerCase()].includes(realm.toLowerCase());\n\t});\n};\n\nmodule.exports = {\n\tfetchRealms,\n\tfetchRealm\n};\n"]},"metadata":{},"sourceType":"script"}