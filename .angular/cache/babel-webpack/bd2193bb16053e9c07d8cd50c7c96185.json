{"ast":null,"code":"import _asyncToGenerator from \"/home/dre/Documents/IT255-DZ10/IT255-DZ10/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { Tweet } from './model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common/http\"; // This will work on TypeScript (with commonJS and ECMA)\n// AND with Node.js in ECMA mode (.mjs files, type: \"module\" in package.json)\n// OAuth 1.0a (User context)\n\nconst userClient = new TwitterApi({\n  appKey: 'p2kVIa1qoDAQiwPPhetGAgUxX',\n  appSecret: 'G0YtCOOeJticsXcARUTaeUDtkWTwPGbYhk7VrkbUZir37UfyeU',\n  // Following access tokens are not required if you are\n  // at part 1 of user-auth process (ask for a request token)\n  // or if you want a app-only client (see below)\n  accessToken: '1469634542965243910-ZqOfcvXvmMdRiTF47fbrYyYhBj7vOT',\n  accessSecret: 'MewJhjnohl2c7a6DJzQ8NNxh6ujsvaQEYa6hoCZMmskzg'\n});\nconst appOnlyClient = new TwitterApi('AAAAAAAAAAAAAAAAAAAAAHhxWwEAAAAAMr40QAdAkZTk2Vho2Rc0Ak0xqqM%3DvX8bZQorxbUza43lTNLRdOY3oh672e7Y7nmPrOyU4Im6dVjUOr');\nexport class TweetComponent {\n  constructor(route, http) {\n    this.route = route;\n    this.http = http;\n    console.log(3213);\n    this.tweet = new Tweet('', 0, '', '', '');\n    this.route.queryParams.subscribe(params => {\n      this.tweet.id = params['id'];\n    });\n    this.getTweet();\n  }\n\n  ngOnInit() {\n    this.getTweet();\n  }\n\n  getTweet() {\n    return _asyncToGenerator(function* () {\n      const data = yield userClient.v2.singleTweet('20', {\n        expansions: ['entities.mentions.username', 'in_reply_to_user_id']\n      });\n      console.log(data);\n    })();\n  }\n\n}\n\nTweetComponent.ɵfac = function TweetComponent_Factory(t) {\n  return new (t || TweetComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.HttpClient));\n};\n\nTweetComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TweetComponent,\n  selectors: [[\"app-tweet\"]],\n  inputs: {\n    tweet: \"tweet\"\n  },\n  decls: 3,\n  vars: 1,\n  template: function TweetComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(2, \"router-outlet\");\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\"Account ID: \", ctx.tweet.id, \"\");\n    }\n  },\n  directives: [i1.RouterOutlet],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ0d2VldC5jb21wb25lbnQuY3NzIn0= */\"]\n});","map":{"version":3,"sources":["/home/dre/Documents/IT255-DZ10/IT255-DZ10/src/app/components/tweet/tweet.component.ts"],"names":["Tweet","i0","i1","i2","userClient","TwitterApi","appKey","appSecret","accessToken","accessSecret","appOnlyClient","TweetComponent","constructor","route","http","console","log","tweet","queryParams","subscribe","params","id","getTweet","ngOnInit","data","v2","singleTweet","expansions","ɵfac","TweetComponent_Factory","t","ɵɵdirectiveInject","ActivatedRoute","HttpClient","ɵcmp","ɵɵdefineComponent","type","selectors","inputs","decls","vars","template","TweetComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵtextInterpolate1","directives","RouterOutlet","styles"],"mappings":"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","sourcesContent":["import { Tweet } from './model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common/http\";\n// This will work on TypeScript (with commonJS and ECMA)\n// AND with Node.js in ECMA mode (.mjs files, type: \"module\" in package.json)\n// OAuth 1.0a (User context)\nconst userClient = new TwitterApi({\n    appKey: 'p2kVIa1qoDAQiwPPhetGAgUxX',\n    appSecret: 'G0YtCOOeJticsXcARUTaeUDtkWTwPGbYhk7VrkbUZir37UfyeU',\n    // Following access tokens are not required if you are\n    // at part 1 of user-auth process (ask for a request token)\n    // or if you want a app-only client (see below)\n    accessToken: '1469634542965243910-ZqOfcvXvmMdRiTF47fbrYyYhBj7vOT',\n    accessSecret: 'MewJhjnohl2c7a6DJzQ8NNxh6ujsvaQEYa6hoCZMmskzg',\n});\nconst appOnlyClient = new TwitterApi('AAAAAAAAAAAAAAAAAAAAAHhxWwEAAAAAMr40QAdAkZTk2Vho2Rc0Ak0xqqM%3DvX8bZQorxbUza43lTNLRdOY3oh672e7Y7nmPrOyU4Im6dVjUOr');\nexport class TweetComponent {\n    constructor(route, http) {\n        this.route = route;\n        this.http = http;\n        console.log(3213);\n        this.tweet = new Tweet('', 0, '', '', '');\n        this.route.queryParams.subscribe(params => {\n            this.tweet.id = params['id'];\n        });\n        this.getTweet();\n    }\n    ngOnInit() {\n        this.getTweet();\n    }\n    async getTweet() {\n        const data = await userClient.v2.singleTweet('20', {\n            expansions: [\n                'entities.mentions.username',\n                'in_reply_to_user_id',\n            ],\n        });\n        console.log(data);\n    }\n}\nTweetComponent.ɵfac = function TweetComponent_Factory(t) { return new (t || TweetComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.HttpClient)); };\nTweetComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TweetComponent, selectors: [[\"app-tweet\"]], inputs: { tweet: \"tweet\" }, decls: 3, vars: 1, template: function TweetComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(2, \"router-outlet\");\n    } if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\"Account ID: \", ctx.tweet.id, \"\");\n    } }, directives: [i1.RouterOutlet], styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ0d2VldC5jb21wb25lbnQuY3NzIn0= */\"] });\n"]},"metadata":{},"sourceType":"module"}