{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"/home/dre/Documents/IT255-DZ10/IT255-DZ10/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RequestHandlerHelper = void 0;\n\nconst https_1 = require(\"https\");\n\nconst settings_1 = require(\"../settings\");\n\nconst TweetStream_1 = __importDefault(require(\"../stream/TweetStream\"));\n\nconst types_1 = require(\"../types\");\n\nclass RequestHandlerHelper {\n  constructor(requestData) {\n    this.requestData = requestData;\n    this.responseData = '';\n  }\n\n  get hrefPathname() {\n    const url = this.requestData.url;\n    return url.hostname + url.pathname;\n  }\n\n  isFormEncodedEndpoint() {\n    return this.requestData.url.href.startsWith('https://api.twitter.com/oauth/');\n  }\n\n  getRateLimitFromResponse(res) {\n    let rateLimit = undefined;\n\n    if (res.headers['x-rate-limit-limit']) {\n      rateLimit = {\n        limit: Number(res.headers['x-rate-limit-limit']),\n        remaining: Number(res.headers['x-rate-limit-remaining']),\n        reset: Number(res.headers['x-rate-limit-reset'])\n      };\n\n      if (this.requestData.rateLimitSaver) {\n        this.requestData.rateLimitSaver(rateLimit);\n      }\n    }\n\n    return rateLimit;\n  }\n\n  createRequestError(error) {\n    if (settings_1.TwitterApiV2Settings.debug) {\n      console.log('Request network error:', error);\n    }\n\n    return new types_1.ApiRequestError('Request failed.', {\n      request: this.req,\n      error\n    });\n  }\n\n  formatV1Errors(errors) {\n    return errors.map(({\n      code,\n      message\n    }) => `${message} (Twitter code ${code})`).join(', ');\n  }\n\n  formatV2Error(error) {\n    return `${error.title}: ${error.detail} (see ${error.type})`;\n  }\n\n  createResponseError({\n    res,\n    data,\n    rateLimit,\n    code\n  }) {\n    var _a;\n\n    if (settings_1.TwitterApiV2Settings.debug) {\n      console.log('Request failed with code', code, ', data:', data, 'response headers:', res.headers);\n    } // Errors formatting.\n\n\n    let errorString = `Request failed with code ${code}`;\n\n    if ((_a = data === null || data === void 0 ? void 0 : data.errors) === null || _a === void 0 ? void 0 : _a.length) {\n      const errors = data.errors;\n\n      if ('code' in errors[0]) {\n        errorString += ' - ' + this.formatV1Errors(errors);\n      } else {\n        errorString += ' - ' + this.formatV2Error(data);\n      }\n    }\n\n    return new types_1.ApiResponseError(errorString, {\n      code,\n      data,\n      headers: res.headers,\n      request: this.req,\n      response: res,\n      rateLimit\n    });\n  }\n\n  getParsedResponse(res) {\n    var _a;\n\n    let data = this.responseData; // Auto parse if server responds with JSON body\n\n    if (data.length && ((_a = res.headers['content-type']) === null || _a === void 0 ? void 0 : _a.includes('application/json'))) {\n      data = JSON.parse(data);\n    } // f-e oauth token endpoints\n    else if (this.isFormEncodedEndpoint()) {\n      const response_form_entries = {};\n\n      for (const [item, value] of new URLSearchParams(data)) {\n        response_form_entries[item] = value;\n      }\n\n      data = response_form_entries;\n    }\n\n    return data;\n  }\n\n  requestErrorHandler(reject, requestError) {\n    reject(this.createRequestError(requestError));\n  }\n\n  classicResponseHandler(resolve, reject, res) {\n    // Register the response data\n    res.on('data', chunk => this.responseData += chunk);\n    res.on('end', this.onResponseEndHandler.bind(this, resolve, reject, res));\n  }\n\n  onResponseEndHandler(resolve, reject, res) {\n    const rateLimit = this.getRateLimitFromResponse(res);\n    const data = this.getParsedResponse(res); // Handle bad error codes\n\n    const code = res.statusCode;\n\n    if (code >= 400) {\n      reject(this.createResponseError({\n        data,\n        res,\n        rateLimit,\n        code\n      }));\n    }\n\n    if (settings_1.TwitterApiV2Settings.debug) {\n      console.log(`[${this.requestData.options.method} ${this.hrefPathname}]: Request succeeds with code ${res.statusCode}`);\n      console.log('Response body:', data);\n    }\n\n    resolve({\n      data,\n      headers: res.headers,\n      rateLimit\n    });\n  }\n\n  streamResponseHandler(resolve, reject, res) {\n    const code = res.statusCode;\n\n    if (code < 400) {\n      if (settings_1.TwitterApiV2Settings.debug) {\n        console.log(`[${this.requestData.options.method} ${this.hrefPathname}]: Request succeeds with code ${res.statusCode} (starting stream)`);\n      } // HTTP code ok, consume stream\n\n\n      resolve({\n        req: this.req,\n        res,\n        requestData: this.requestData\n      });\n    } else {\n      // Handle response normally, can only rejects\n      this.classicResponseHandler(() => undefined, reject, res);\n    }\n  }\n\n  debugRequest() {\n    const url = this.requestData.url;\n    console.log(`[${this.requestData.options.method} ${this.hrefPathname}]`, this.requestData.options);\n\n    if (url.search) {\n      console.log('Request parameters:', [...url.searchParams.entries()].map(([key, value]) => `${key}: ${value}`));\n    }\n\n    if (this.requestData.body) {\n      console.log('Request body:', this.requestData.body);\n    }\n  }\n\n  buildRequest() {\n    if (settings_1.TwitterApiV2Settings.debug) {\n      this.debugRequest();\n    }\n\n    const url = this.requestData.url;\n    const auth = url.username ? `${url.username}:${url.password}` : undefined;\n    this.req = https_1.request({ ...this.requestData.options,\n      // Define URL params manually, addresses dependencies error https://github.com/PLhery/node-twitter-api-v2/issues/94\n      host: url.hostname,\n      port: url.port || undefined,\n      path: url.pathname + url.search,\n      protocol: url.protocol,\n      auth\n    });\n  }\n\n  makeRequest() {\n    this.buildRequest();\n    return new Promise((resolve, reject) => {\n      const req = this.req; // Handle request errors\n\n      req.on('error', this.requestErrorHandler.bind(this, reject));\n      req.on('response', this.classicResponseHandler.bind(this, resolve, reject));\n\n      if (this.requestData.body) {\n        req.write(this.requestData.body);\n      }\n\n      req.end();\n    });\n  }\n\n  makeRequestAsStream() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const {\n        req,\n        res,\n        requestData\n      } = yield _this.makeRequestAndResolveWhenReady();\n      return new TweetStream_1.default(requestData, req, res);\n    })();\n  }\n\n  makeRequestAndResolveWhenReady() {\n    this.buildRequest();\n    return new Promise((resolve, reject) => {\n      const req = this.req; // Handle request errors\n\n      req.on('error', this.requestErrorHandler.bind(this, reject));\n      req.on('response', this.streamResponseHandler.bind(this, resolve, reject));\n\n      if (this.requestData.body) {\n        req.write(this.requestData.body);\n      }\n\n      req.end();\n    });\n  }\n\n}\n\nexports.RequestHandlerHelper = RequestHandlerHelper;\nexports.default = RequestHandlerHelper;","map":{"version":3,"sources":["/home/dre/Documents/IT255-DZ10/IT255-DZ10/node_modules/twitter-api-v2/dist/client-mixins/request-handler.helper.js"],"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","RequestHandlerHelper","https_1","require","settings_1","TweetStream_1","types_1","constructor","requestData","responseData","hrefPathname","url","hostname","pathname","isFormEncodedEndpoint","href","startsWith","getRateLimitFromResponse","res","rateLimit","undefined","headers","limit","Number","remaining","reset","rateLimitSaver","createRequestError","error","TwitterApiV2Settings","debug","console","log","ApiRequestError","request","req","formatV1Errors","errors","map","code","message","join","formatV2Error","title","detail","type","createResponseError","data","_a","errorString","length","ApiResponseError","response","getParsedResponse","includes","JSON","parse","response_form_entries","item","URLSearchParams","requestErrorHandler","reject","requestError","classicResponseHandler","resolve","on","chunk","onResponseEndHandler","bind","statusCode","options","method","streamResponseHandler","debugRequest","search","searchParams","entries","key","body","buildRequest","auth","username","password","host","port","path","protocol","makeRequest","Promise","write","end","makeRequestAsStream","makeRequestAndResolveWhenReady","default"],"mappings":"AAAA;;;;AACA,IAAIA,eAAe,GAAI,QAAQ,KAAKA,eAAd,IAAkC,UAAUC,GAAV,EAAe;AACnE,SAAQA,GAAG,IAAIA,GAAG,CAACC,UAAZ,GAA0BD,GAA1B,GAAgC;AAAE,eAAWA;AAAb,GAAvC;AACH,CAFD;;AAGAE,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,oBAAR,GAA+B,KAAK,CAApC;;AACA,MAAMC,OAAO,GAAGC,OAAO,CAAC,OAAD,CAAvB;;AACA,MAAMC,UAAU,GAAGD,OAAO,CAAC,aAAD,CAA1B;;AACA,MAAME,aAAa,GAAGX,eAAe,CAACS,OAAO,CAAC,uBAAD,CAAR,CAArC;;AACA,MAAMG,OAAO,GAAGH,OAAO,CAAC,UAAD,CAAvB;;AACA,MAAMF,oBAAN,CAA2B;AACvBM,EAAAA,WAAW,CAACC,WAAD,EAAc;AACrB,SAAKA,WAAL,GAAmBA,WAAnB;AACA,SAAKC,YAAL,GAAoB,EAApB;AACH;;AACe,MAAZC,YAAY,GAAG;AACf,UAAMC,GAAG,GAAG,KAAKH,WAAL,CAAiBG,GAA7B;AACA,WAAOA,GAAG,CAACC,QAAJ,GAAeD,GAAG,CAACE,QAA1B;AACH;;AACDC,EAAAA,qBAAqB,GAAG;AACpB,WAAO,KAAKN,WAAL,CAAiBG,GAAjB,CAAqBI,IAArB,CAA0BC,UAA1B,CAAqC,gCAArC,CAAP;AACH;;AACDC,EAAAA,wBAAwB,CAACC,GAAD,EAAM;AAC1B,QAAIC,SAAS,GAAGC,SAAhB;;AACA,QAAIF,GAAG,CAACG,OAAJ,CAAY,oBAAZ,CAAJ,EAAuC;AACnCF,MAAAA,SAAS,GAAG;AACRG,QAAAA,KAAK,EAAEC,MAAM,CAACL,GAAG,CAACG,OAAJ,CAAY,oBAAZ,CAAD,CADL;AAERG,QAAAA,SAAS,EAAED,MAAM,CAACL,GAAG,CAACG,OAAJ,CAAY,wBAAZ,CAAD,CAFT;AAGRI,QAAAA,KAAK,EAAEF,MAAM,CAACL,GAAG,CAACG,OAAJ,CAAY,oBAAZ,CAAD;AAHL,OAAZ;;AAKA,UAAI,KAAKb,WAAL,CAAiBkB,cAArB,EAAqC;AACjC,aAAKlB,WAAL,CAAiBkB,cAAjB,CAAgCP,SAAhC;AACH;AACJ;;AACD,WAAOA,SAAP;AACH;;AACDQ,EAAAA,kBAAkB,CAACC,KAAD,EAAQ;AACtB,QAAIxB,UAAU,CAACyB,oBAAX,CAAgCC,KAApC,EAA2C;AACvCC,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCJ,KAAtC;AACH;;AACD,WAAO,IAAItB,OAAO,CAAC2B,eAAZ,CAA4B,iBAA5B,EAA+C;AAClDC,MAAAA,OAAO,EAAE,KAAKC,GADoC;AAElDP,MAAAA;AAFkD,KAA/C,CAAP;AAIH;;AACDQ,EAAAA,cAAc,CAACC,MAAD,EAAS;AACnB,WAAOA,MAAM,CACRC,GADE,CACE,CAAC;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAAD,KAAwB,GAAEA,OAAQ,kBAAiBD,IAAK,GAD1D,EAEFE,IAFE,CAEG,IAFH,CAAP;AAGH;;AACDC,EAAAA,aAAa,CAACd,KAAD,EAAQ;AACjB,WAAQ,GAAEA,KAAK,CAACe,KAAM,KAAIf,KAAK,CAACgB,MAAO,SAAQhB,KAAK,CAACiB,IAAK,GAA1D;AACH;;AACDC,EAAAA,mBAAmB,CAAC;AAAE5B,IAAAA,GAAF;AAAO6B,IAAAA,IAAP;AAAa5B,IAAAA,SAAb;AAAwBoB,IAAAA;AAAxB,GAAD,EAAiC;AAChD,QAAIS,EAAJ;;AACA,QAAI5C,UAAU,CAACyB,oBAAX,CAAgCC,KAApC,EAA2C;AACvCC,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCO,IAAxC,EAA8C,SAA9C,EAAyDQ,IAAzD,EAA+D,mBAA/D,EAAoF7B,GAAG,CAACG,OAAxF;AACH,KAJ+C,CAKhD;;;AACA,QAAI4B,WAAW,GAAI,4BAA2BV,IAAK,EAAnD;;AACA,QAAI,CAACS,EAAE,GAAGD,IAAI,KAAK,IAAT,IAAiBA,IAAI,KAAK,KAAK,CAA/B,GAAmC,KAAK,CAAxC,GAA4CA,IAAI,CAACV,MAAvD,MAAmE,IAAnE,IAA2EW,EAAE,KAAK,KAAK,CAAvF,GAA2F,KAAK,CAAhG,GAAoGA,EAAE,CAACE,MAA3G,EAAmH;AAC/G,YAAMb,MAAM,GAAGU,IAAI,CAACV,MAApB;;AACA,UAAI,UAAUA,MAAM,CAAC,CAAD,CAApB,EAAyB;AACrBY,QAAAA,WAAW,IAAI,QAAQ,KAAKb,cAAL,CAAoBC,MAApB,CAAvB;AACH,OAFD,MAGK;AACDY,QAAAA,WAAW,IAAI,QAAQ,KAAKP,aAAL,CAAmBK,IAAnB,CAAvB;AACH;AACJ;;AACD,WAAO,IAAIzC,OAAO,CAAC6C,gBAAZ,CAA6BF,WAA7B,EAA0C;AAC7CV,MAAAA,IAD6C;AAE7CQ,MAAAA,IAF6C;AAG7C1B,MAAAA,OAAO,EAAEH,GAAG,CAACG,OAHgC;AAI7Ca,MAAAA,OAAO,EAAE,KAAKC,GAJ+B;AAK7CiB,MAAAA,QAAQ,EAAElC,GALmC;AAM7CC,MAAAA;AAN6C,KAA1C,CAAP;AAQH;;AACDkC,EAAAA,iBAAiB,CAACnC,GAAD,EAAM;AACnB,QAAI8B,EAAJ;;AACA,QAAID,IAAI,GAAG,KAAKtC,YAAhB,CAFmB,CAGnB;;AACA,QAAIsC,IAAI,CAACG,MAAL,KAAgB,CAACF,EAAE,GAAG9B,GAAG,CAACG,OAAJ,CAAY,cAAZ,CAAN,MAAuC,IAAvC,IAA+C2B,EAAE,KAAK,KAAK,CAA3D,GAA+D,KAAK,CAApE,GAAwEA,EAAE,CAACM,QAAH,CAAY,kBAAZ,CAAxF,CAAJ,EAA8H;AAC1HP,MAAAA,IAAI,GAAGQ,IAAI,CAACC,KAAL,CAAWT,IAAX,CAAP;AACH,KAFD,CAGA;AAHA,SAIK,IAAI,KAAKjC,qBAAL,EAAJ,EAAkC;AACnC,YAAM2C,qBAAqB,GAAG,EAA9B;;AACA,WAAK,MAAM,CAACC,IAAD,EAAO1D,KAAP,CAAX,IAA4B,IAAI2D,eAAJ,CAAoBZ,IAApB,CAA5B,EAAuD;AACnDU,QAAAA,qBAAqB,CAACC,IAAD,CAArB,GAA8B1D,KAA9B;AACH;;AACD+C,MAAAA,IAAI,GAAGU,qBAAP;AACH;;AACD,WAAOV,IAAP;AACH;;AACDa,EAAAA,mBAAmB,CAACC,MAAD,EAASC,YAAT,EAAuB;AACtCD,IAAAA,MAAM,CAAC,KAAKlC,kBAAL,CAAwBmC,YAAxB,CAAD,CAAN;AACH;;AACDC,EAAAA,sBAAsB,CAACC,OAAD,EAAUH,MAAV,EAAkB3C,GAAlB,EAAuB;AACzC;AACAA,IAAAA,GAAG,CAAC+C,EAAJ,CAAO,MAAP,EAAeC,KAAK,IAAI,KAAKzD,YAAL,IAAqByD,KAA7C;AACAhD,IAAAA,GAAG,CAAC+C,EAAJ,CAAO,KAAP,EAAc,KAAKE,oBAAL,CAA0BC,IAA1B,CAA+B,IAA/B,EAAqCJ,OAArC,EAA8CH,MAA9C,EAAsD3C,GAAtD,CAAd;AACH;;AACDiD,EAAAA,oBAAoB,CAACH,OAAD,EAAUH,MAAV,EAAkB3C,GAAlB,EAAuB;AACvC,UAAMC,SAAS,GAAG,KAAKF,wBAAL,CAA8BC,GAA9B,CAAlB;AACA,UAAM6B,IAAI,GAAG,KAAKM,iBAAL,CAAuBnC,GAAvB,CAAb,CAFuC,CAGvC;;AACA,UAAMqB,IAAI,GAAGrB,GAAG,CAACmD,UAAjB;;AACA,QAAI9B,IAAI,IAAI,GAAZ,EAAiB;AACbsB,MAAAA,MAAM,CAAC,KAAKf,mBAAL,CAAyB;AAAEC,QAAAA,IAAF;AAAQ7B,QAAAA,GAAR;AAAaC,QAAAA,SAAb;AAAwBoB,QAAAA;AAAxB,OAAzB,CAAD,CAAN;AACH;;AACD,QAAInC,UAAU,CAACyB,oBAAX,CAAgCC,KAApC,EAA2C;AACvCC,MAAAA,OAAO,CAACC,GAAR,CAAa,IAAG,KAAKxB,WAAL,CAAiB8D,OAAjB,CAAyBC,MAAO,IAAG,KAAK7D,YAAa,iCAAgCQ,GAAG,CAACmD,UAAW,EAApH;AACAtC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8Be,IAA9B;AACH;;AACDiB,IAAAA,OAAO,CAAC;AACJjB,MAAAA,IADI;AAEJ1B,MAAAA,OAAO,EAAEH,GAAG,CAACG,OAFT;AAGJF,MAAAA;AAHI,KAAD,CAAP;AAKH;;AACDqD,EAAAA,qBAAqB,CAACR,OAAD,EAAUH,MAAV,EAAkB3C,GAAlB,EAAuB;AACxC,UAAMqB,IAAI,GAAGrB,GAAG,CAACmD,UAAjB;;AACA,QAAI9B,IAAI,GAAG,GAAX,EAAgB;AACZ,UAAInC,UAAU,CAACyB,oBAAX,CAAgCC,KAApC,EAA2C;AACvCC,QAAAA,OAAO,CAACC,GAAR,CAAa,IAAG,KAAKxB,WAAL,CAAiB8D,OAAjB,CAAyBC,MAAO,IAAG,KAAK7D,YAAa,iCAAgCQ,GAAG,CAACmD,UAAW,oBAApH;AACH,OAHW,CAIZ;;;AACAL,MAAAA,OAAO,CAAC;AAAE7B,QAAAA,GAAG,EAAE,KAAKA,GAAZ;AAAiBjB,QAAAA,GAAjB;AAAsBV,QAAAA,WAAW,EAAE,KAAKA;AAAxC,OAAD,CAAP;AACH,KAND,MAOK;AACD;AACA,WAAKuD,sBAAL,CAA4B,MAAM3C,SAAlC,EAA6CyC,MAA7C,EAAqD3C,GAArD;AACH;AACJ;;AACDuD,EAAAA,YAAY,GAAG;AACX,UAAM9D,GAAG,GAAG,KAAKH,WAAL,CAAiBG,GAA7B;AACAoB,IAAAA,OAAO,CAACC,GAAR,CAAa,IAAG,KAAKxB,WAAL,CAAiB8D,OAAjB,CAAyBC,MAAO,IAAG,KAAK7D,YAAa,GAArE,EAAyE,KAAKF,WAAL,CAAiB8D,OAA1F;;AACA,QAAI3D,GAAG,CAAC+D,MAAR,EAAgB;AACZ3C,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmC,CAAC,GAAGrB,GAAG,CAACgE,YAAJ,CAAiBC,OAAjB,EAAJ,EAAgCtC,GAAhC,CAAoC,CAAC,CAACuC,GAAD,EAAM7E,KAAN,CAAD,KAAmB,GAAE6E,GAAI,KAAI7E,KAAM,EAAvE,CAAnC;AACH;;AACD,QAAI,KAAKQ,WAAL,CAAiBsE,IAArB,EAA2B;AACvB/C,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6B,KAAKxB,WAAL,CAAiBsE,IAA9C;AACH;AACJ;;AACDC,EAAAA,YAAY,GAAG;AACX,QAAI3E,UAAU,CAACyB,oBAAX,CAAgCC,KAApC,EAA2C;AACvC,WAAK2C,YAAL;AACH;;AACD,UAAM9D,GAAG,GAAG,KAAKH,WAAL,CAAiBG,GAA7B;AACA,UAAMqE,IAAI,GAAGrE,GAAG,CAACsE,QAAJ,GAAgB,GAAEtE,GAAG,CAACsE,QAAS,IAAGtE,GAAG,CAACuE,QAAS,EAA/C,GAAmD9D,SAAhE;AACA,SAAKe,GAAL,GAAWjC,OAAO,CAACgC,OAAR,CAAgB,EACvB,GAAG,KAAK1B,WAAL,CAAiB8D,OADG;AAEvB;AACAa,MAAAA,IAAI,EAAExE,GAAG,CAACC,QAHa;AAIvBwE,MAAAA,IAAI,EAAEzE,GAAG,CAACyE,IAAJ,IAAYhE,SAJK;AAKvBiE,MAAAA,IAAI,EAAE1E,GAAG,CAACE,QAAJ,GAAeF,GAAG,CAAC+D,MALF;AAMvBY,MAAAA,QAAQ,EAAE3E,GAAG,CAAC2E,QANS;AAOvBN,MAAAA;AAPuB,KAAhB,CAAX;AASH;;AACDO,EAAAA,WAAW,GAAG;AACV,SAAKR,YAAL;AACA,WAAO,IAAIS,OAAJ,CAAY,CAACxB,OAAD,EAAUH,MAAV,KAAqB;AACpC,YAAM1B,GAAG,GAAG,KAAKA,GAAjB,CADoC,CAEpC;;AACAA,MAAAA,GAAG,CAAC8B,EAAJ,CAAO,OAAP,EAAgB,KAAKL,mBAAL,CAAyBQ,IAAzB,CAA8B,IAA9B,EAAoCP,MAApC,CAAhB;AACA1B,MAAAA,GAAG,CAAC8B,EAAJ,CAAO,UAAP,EAAmB,KAAKF,sBAAL,CAA4BK,IAA5B,CAAiC,IAAjC,EAAuCJ,OAAvC,EAAgDH,MAAhD,CAAnB;;AACA,UAAI,KAAKrD,WAAL,CAAiBsE,IAArB,EAA2B;AACvB3C,QAAAA,GAAG,CAACsD,KAAJ,CAAU,KAAKjF,WAAL,CAAiBsE,IAA3B;AACH;;AACD3C,MAAAA,GAAG,CAACuD,GAAJ;AACH,KATM,CAAP;AAUH;;AACKC,EAAAA,mBAAmB,GAAG;AAAA;;AAAA;AACxB,YAAM;AAAExD,QAAAA,GAAF;AAAOjB,QAAAA,GAAP;AAAYV,QAAAA;AAAZ,gBAAkC,KAAI,CAACoF,8BAAL,EAAxC;AACA,aAAO,IAAIvF,aAAa,CAACwF,OAAlB,CAA0BrF,WAA1B,EAAuC2B,GAAvC,EAA4CjB,GAA5C,CAAP;AAFwB;AAG3B;;AACD0E,EAAAA,8BAA8B,GAAG;AAC7B,SAAKb,YAAL;AACA,WAAO,IAAIS,OAAJ,CAAY,CAACxB,OAAD,EAAUH,MAAV,KAAqB;AACpC,YAAM1B,GAAG,GAAG,KAAKA,GAAjB,CADoC,CAEpC;;AACAA,MAAAA,GAAG,CAAC8B,EAAJ,CAAO,OAAP,EAAgB,KAAKL,mBAAL,CAAyBQ,IAAzB,CAA8B,IAA9B,EAAoCP,MAApC,CAAhB;AACA1B,MAAAA,GAAG,CAAC8B,EAAJ,CAAO,UAAP,EAAmB,KAAKO,qBAAL,CAA2BJ,IAA3B,CAAgC,IAAhC,EAAsCJ,OAAtC,EAA+CH,MAA/C,CAAnB;;AACA,UAAI,KAAKrD,WAAL,CAAiBsE,IAArB,EAA2B;AACvB3C,QAAAA,GAAG,CAACsD,KAAJ,CAAU,KAAKjF,WAAL,CAAiBsE,IAA3B;AACH;;AACD3C,MAAAA,GAAG,CAACuD,GAAJ;AACH,KATM,CAAP;AAUH;;AApLsB;;AAsL3B3F,OAAO,CAACE,oBAAR,GAA+BA,oBAA/B;AACAF,OAAO,CAAC8F,OAAR,GAAkB5F,oBAAlB","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RequestHandlerHelper = void 0;\nconst https_1 = require(\"https\");\nconst settings_1 = require(\"../settings\");\nconst TweetStream_1 = __importDefault(require(\"../stream/TweetStream\"));\nconst types_1 = require(\"../types\");\nclass RequestHandlerHelper {\n    constructor(requestData) {\n        this.requestData = requestData;\n        this.responseData = '';\n    }\n    get hrefPathname() {\n        const url = this.requestData.url;\n        return url.hostname + url.pathname;\n    }\n    isFormEncodedEndpoint() {\n        return this.requestData.url.href.startsWith('https://api.twitter.com/oauth/');\n    }\n    getRateLimitFromResponse(res) {\n        let rateLimit = undefined;\n        if (res.headers['x-rate-limit-limit']) {\n            rateLimit = {\n                limit: Number(res.headers['x-rate-limit-limit']),\n                remaining: Number(res.headers['x-rate-limit-remaining']),\n                reset: Number(res.headers['x-rate-limit-reset']),\n            };\n            if (this.requestData.rateLimitSaver) {\n                this.requestData.rateLimitSaver(rateLimit);\n            }\n        }\n        return rateLimit;\n    }\n    createRequestError(error) {\n        if (settings_1.TwitterApiV2Settings.debug) {\n            console.log('Request network error:', error);\n        }\n        return new types_1.ApiRequestError('Request failed.', {\n            request: this.req,\n            error,\n        });\n    }\n    formatV1Errors(errors) {\n        return errors\n            .map(({ code, message }) => `${message} (Twitter code ${code})`)\n            .join(', ');\n    }\n    formatV2Error(error) {\n        return `${error.title}: ${error.detail} (see ${error.type})`;\n    }\n    createResponseError({ res, data, rateLimit, code }) {\n        var _a;\n        if (settings_1.TwitterApiV2Settings.debug) {\n            console.log('Request failed with code', code, ', data:', data, 'response headers:', res.headers);\n        }\n        // Errors formatting.\n        let errorString = `Request failed with code ${code}`;\n        if ((_a = data === null || data === void 0 ? void 0 : data.errors) === null || _a === void 0 ? void 0 : _a.length) {\n            const errors = data.errors;\n            if ('code' in errors[0]) {\n                errorString += ' - ' + this.formatV1Errors(errors);\n            }\n            else {\n                errorString += ' - ' + this.formatV2Error(data);\n            }\n        }\n        return new types_1.ApiResponseError(errorString, {\n            code,\n            data,\n            headers: res.headers,\n            request: this.req,\n            response: res,\n            rateLimit,\n        });\n    }\n    getParsedResponse(res) {\n        var _a;\n        let data = this.responseData;\n        // Auto parse if server responds with JSON body\n        if (data.length && ((_a = res.headers['content-type']) === null || _a === void 0 ? void 0 : _a.includes('application/json'))) {\n            data = JSON.parse(data);\n        }\n        // f-e oauth token endpoints\n        else if (this.isFormEncodedEndpoint()) {\n            const response_form_entries = {};\n            for (const [item, value] of new URLSearchParams(data)) {\n                response_form_entries[item] = value;\n            }\n            data = response_form_entries;\n        }\n        return data;\n    }\n    requestErrorHandler(reject, requestError) {\n        reject(this.createRequestError(requestError));\n    }\n    classicResponseHandler(resolve, reject, res) {\n        // Register the response data\n        res.on('data', chunk => this.responseData += chunk);\n        res.on('end', this.onResponseEndHandler.bind(this, resolve, reject, res));\n    }\n    onResponseEndHandler(resolve, reject, res) {\n        const rateLimit = this.getRateLimitFromResponse(res);\n        const data = this.getParsedResponse(res);\n        // Handle bad error codes\n        const code = res.statusCode;\n        if (code >= 400) {\n            reject(this.createResponseError({ data, res, rateLimit, code }));\n        }\n        if (settings_1.TwitterApiV2Settings.debug) {\n            console.log(`[${this.requestData.options.method} ${this.hrefPathname}]: Request succeeds with code ${res.statusCode}`);\n            console.log('Response body:', data);\n        }\n        resolve({\n            data,\n            headers: res.headers,\n            rateLimit,\n        });\n    }\n    streamResponseHandler(resolve, reject, res) {\n        const code = res.statusCode;\n        if (code < 400) {\n            if (settings_1.TwitterApiV2Settings.debug) {\n                console.log(`[${this.requestData.options.method} ${this.hrefPathname}]: Request succeeds with code ${res.statusCode} (starting stream)`);\n            }\n            // HTTP code ok, consume stream\n            resolve({ req: this.req, res, requestData: this.requestData });\n        }\n        else {\n            // Handle response normally, can only rejects\n            this.classicResponseHandler(() => undefined, reject, res);\n        }\n    }\n    debugRequest() {\n        const url = this.requestData.url;\n        console.log(`[${this.requestData.options.method} ${this.hrefPathname}]`, this.requestData.options);\n        if (url.search) {\n            console.log('Request parameters:', [...url.searchParams.entries()].map(([key, value]) => `${key}: ${value}`));\n        }\n        if (this.requestData.body) {\n            console.log('Request body:', this.requestData.body);\n        }\n    }\n    buildRequest() {\n        if (settings_1.TwitterApiV2Settings.debug) {\n            this.debugRequest();\n        }\n        const url = this.requestData.url;\n        const auth = url.username ? `${url.username}:${url.password}` : undefined;\n        this.req = https_1.request({\n            ...this.requestData.options,\n            // Define URL params manually, addresses dependencies error https://github.com/PLhery/node-twitter-api-v2/issues/94\n            host: url.hostname,\n            port: url.port || undefined,\n            path: url.pathname + url.search,\n            protocol: url.protocol,\n            auth,\n        });\n    }\n    makeRequest() {\n        this.buildRequest();\n        return new Promise((resolve, reject) => {\n            const req = this.req;\n            // Handle request errors\n            req.on('error', this.requestErrorHandler.bind(this, reject));\n            req.on('response', this.classicResponseHandler.bind(this, resolve, reject));\n            if (this.requestData.body) {\n                req.write(this.requestData.body);\n            }\n            req.end();\n        });\n    }\n    async makeRequestAsStream() {\n        const { req, res, requestData } = await this.makeRequestAndResolveWhenReady();\n        return new TweetStream_1.default(requestData, req, res);\n    }\n    makeRequestAndResolveWhenReady() {\n        this.buildRequest();\n        return new Promise((resolve, reject) => {\n            const req = this.req;\n            // Handle request errors\n            req.on('error', this.requestErrorHandler.bind(this, reject));\n            req.on('response', this.streamResponseHandler.bind(this, resolve, reject));\n            if (this.requestData.body) {\n                req.write(this.requestData.body);\n            }\n            req.end();\n        });\n    }\n}\nexports.RequestHandlerHelper = RequestHandlerHelper;\nexports.default = RequestHandlerHelper;\n"]},"metadata":{},"sourceType":"script"}